import taichi as ti


###########################################
# barrier_{E, g, H}
# PP_2D_{E, g, H}
# PE_2D_{E, g, H}
# EE_3D_{E, g, H}
# PE_3D_{E, g, H}
# PP_3D_{E, g, H}
# PT_3D_{E, g, H}
# M_{E, g, H, threshold}
# PT_type
# EE_type
# PE_type
###########################################

@ti.func
def barrier_E(d, dHat2, kappa):
    E = 0.0
    if d < dHat2:
        E = -kappa * (d - dHat2) * (d - dHat2) * ti.log(d / dHat2)
    return E


@ti.func
def barrier_g(d, dHat2, kappa):
    g = 0.0
    t2 = d - dHat2
    if d < dHat2:
        g = kappa * (t2 * ti.log(d / dHat2) * -2.0 - (t2 * t2) / d)
    return g


@ti.func
def barrier_H(d, dHat2, kappa):
    H = 0.0
    t2 = d - dHat2
    if d < dHat2:
        H = kappa * ((ti.log(d / dHat2) * -2.0 - t2 * 4.0 / d) + 1.0 / (d * d) * (t2 * t2))
    return H


############################################################
@ti.func
def PP_2D_E(a, b):
    return (a - b).norm_sqr()


@ti.func
def PP_2D_g(a, b):
    ab2 = 2.0 * (a - b)
    return ti.Matrix([ab2[0], ab2[1], -ab2[0], -ab2[1]])


@ti.func
def PP_2D_H(a, b):
    return ti.Matrix([[2.0, 0.0, -2.0, 0.0],
                      [0.0, 2.0, 0.0, -2.0],
                      [-2.0, 0.0, 2.0, 0.0],
                      [0.0, -2.0, 0.0, 2.0]])


@ti.func
def PE_2D_E(p, e0, e1):
    e = e1 - e0
    numerator = (e[1] * p[0] - e[0] * p[1] + e1[0] * e0[1] - e1[1] * e0[0])
    return numerator * numerator / e.norm_sqr()


@ti.func
def PE_2D_g(p, e0, e1):
    v01, v02, v11, v12, v21, v22 = p[0], p[1], e0[0], e0[1], e1[0], e1[1]
    t13 = -v21 + v11
    t14 = -v22 + v12
    t23 = 1.0 / (t13 * t13 + t14 * t14)
    t25 = ((v11 * v22 + -(v12 * v21)) + t14 * v01) + -(t13 * v02)
    t24 = t23 * t23
    t26 = t25 * t25
    t27 = (v11 * 2.0 + -(v21 * 2.0)) * t24 * t26
    t26 *= (v12 * 2.0 + -(v22 * 2.0)) * t24
    g0 = t14 * t23 * t25 * 2.0
    g1 = t13 * t23 * t25 * -2.0
    t24 = t23 * t25
    g2 = -t27 - t24 * (-v22 + v02) * 2.0
    g3 = -t26 + t24 * (-v21 + v01) * 2.0
    g4 = t27 + t24 * (v02 - v12) * 2.0
    g5 = t26 - t24 * (v01 - v11) * 2.0
    return ti.Vector([g0, g1, g2, g3, g4, g5])


@ti.func
def PE_2D_H(p, e0, e1):
    v01, v02, v11, v12, v21, v22 = p[0], p[1], e0[0], e0[1], e1[0], e1[1]
    t15 = -v11 + v01
    t16 = -v12 + v02
    t17 = -v21 + v01
    t18 = -v22 + v02
    t19 = -v21 + v11
    t20 = -v22 + v12
    t21 = v11 * 2.0 + -(v21 * 2.0)
    t22 = v12 * 2.0 + -(v22 * 2.0)
    t23 = t19 * t19
    t24 = t20 * t20
    t31 = 1.0 / (t23 + t24)
    t34 = ((v11 * v22 + -(v12 * v21)) + t20 * v01) + -(t19 * v02)
    t32 = t31 * t31
    t33 = ti.pow(t31, 3.0)
    t35 = t34 * t34
    t60 = t31 * t34 * 2.0
    t59 = -(t19 * t20 * t31 * 2.0)
    t62 = t32 * t35 * 2.0
    t64 = t21 * t21 * t33 * t35 * 2.0
    t65 = t22 * t22 * t33 * t35 * 2.0
    t68 = t15 * t21 * t32 * t34 * 2.0
    t71 = t16 * t22 * t32 * t34 * 2.0
    t72 = t17 * t21 * t32 * t34 * 2.0
    t75 = t18 * t22 * t32 * t34 * 2.0
    t76 = t19 * t21 * t32 * t34 * 2.0
    t77 = t20 * t21 * t32 * t34 * 2.0
    t78 = t19 * t22 * t32 * t34 * 2.0
    t79 = t20 * t22 * t32 * t34 * 2.0
    t90 = t21 * t22 * t33 * t35 * 2.0
    t92 = t16 * t20 * t31 * 2.0 + t77
    t94 = -(t17 * t19 * t31 * 2.0) + t78
    t96 = (t18 * t19 * t31 * 2.0 + -t60) + t76
    t99 = (-(t15 * t20 * t31 * 2.0) + -t60) + t79
    t93 = t15 * t19 * t31 * 2.0 + -t78
    t35 = -(t18 * t20 * t31 * 2.0) + -t77
    t97 = (t17 * t20 * t31 * 2.0 + t60) + -t79
    t98 = (-(t16 * t19 * t31 * 2.0) + t60) + -t76
    t100 = ((-(t15 * t16 * t31 * 2.0) + t71) + -t68) + t90
    t19 = ((-(t17 * t18 * t31 * 2.0) + t75) + -t72) + t90
    t102_tmp = t17 * t22 * t32 * t34
    t76 = t15 * t22 * t32 * t34
    t22 = (((-(t15 * t17 * t31 * 2.0) + t62) + -t65) + t76 * 2.0) + t102_tmp * 2.0
    t33 = t18 * t21 * t32 * t34
    t20 = t16 * t21 * t32 * t34
    t79 = (((-(t16 * t18 * t31 * 2.0) + t62) + -t64) + -(t20 * 2.0)) + -(t33 * 2.0)
    t77 = (((t15 * t18 * t31 * 2.0 + t60) + t68) + -t75) + -t90
    t78 = (((t16 * t17 * t31 * 2.0 + -t60) + t72) + -t71) + -t90
    H0 = t24 * t31 * 2.0
    H1 = t59
    H2 = t35
    H3 = t97
    H4 = t92
    H5 = t99
    H6 = t59
    H7 = t23 * t31 * 2.0
    H8 = t96
    H9 = t94
    H10 = t98
    H11 = t93
    H12 = t35
    H13 = t96
    t35 = -t62 + t64
    H14 = (t35 + t18 * t18 * t31 * 2.0) + t33 * 4.0
    H15 = t19
    H16 = t79
    H17 = t77
    H18 = t97
    H19 = t94
    H20 = t19
    t33 = -t62 + t65
    H21 = (t33 + t17 * t17 * t31 * 2.0) - t102_tmp * 4.0
    H22 = t78
    H23 = t22
    H24 = t92
    H25 = t98
    H26 = t79
    H27 = t78
    H28 = (t35 + t16 * t16 * t31 * 2.0) + t20 * 4.0
    H29 = t100
    H30 = t99
    H31 = t93
    H32 = t77
    H33 = t22
    H34 = t100
    H35 = (t33 + t15 * t15 * t31 * 2.0) - t76 * 4.0
    return ti.Matrix([[H0, H1, H2, H3, H4, H5],
                      [H6, H7, H8, H9, H10, H11],
                      [H12, H13, H14, H15, H16, H17],
                      [H18, H19, H20, H21, H22, H23],
                      [H24, H25, H26, H27, H28, H29],
                      [H30, H31, H32, H33, H34, H35]])


@ti.func
def EE_3D_E(a0, a1, b0, b1):
    b = (a1 - a0).cross(b1 - b0)
    aTb = (b0 - a0).dot(b)
    return aTb * aTb / b.norm_sqr()


@ti.func
def EE_3D_g(a0, a1, b0, b1):
    v01, v02, v03 = a0[0], a0[1], a0[2]
    v11, v12, v13 = a1[0], a1[1], a1[2]
    v21, v22, v23 = b0[0], b0[1], b0[2]
    v31, v32, v33 = b1[0], b1[1], b1[2]
    t11 = -v11 + v01
    t12 = -v12 + v02
    t13 = -v13 + v03
    t14 = -v21 + v01
    t15 = -v22 + v02
    t16 = -v23 + v03
    t17 = -v31 + v21
    t18 = -v32 + v22
    t19 = -v33 + v23
    t32 = t14 * t18
    t33 = t15 * t17
    t34 = t14 * t19
    t35 = t16 * t17
    t36 = t15 * t19
    t37 = t16 * t18
    t44 = t11 * t18 + -(t12 * t17)
    t45 = t11 * t19 + -(t13 * t17)
    t46 = t12 * t19 + -(t13 * t18)
    t75 = 1.0 / ((t44 * t44 + t45 * t45) + t46 * t46)
    t77 = (t16 * t44 + t14 * t46) + -(t15 * t45)
    t76 = t75 * t75
    t78 = t77 * t77
    t79 = (t12 * t44 * 2.0 + t13 * t45 * 2.0) * t76 * t78
    t80 = (t11 * t45 * 2.0 + t12 * t46 * 2.0) * t76 * t78
    t81 = (t18 * t44 * 2.0 + t19 * t45 * 2.0) * t76 * t78
    t18 = (t17 * t45 * 2.0 + t18 * t46 * 2.0) * t76 * t78
    t83 = (t11 * t44 * 2.0 + -(t13 * t46 * 2.0)) * t76 * t78
    t19 = (t17 * t44 * 2.0 + -(t19 * t46 * 2.0)) * t76 * t78
    t76 = t75 * t77
    g0 = -t81 + t76 * ((-t36 + t37) + t46) * 2.0
    g1 = t19 - t76 * ((-t34 + t35) + t45) * 2.0
    g2 = t18 + t76 * ((-t32 + t33) + t44) * 2.0
    g3 = t81 + t76 * (t36 - t37) * 2.0
    g4 = -t19 - t76 * (t34 - t35) * 2.0
    g5 = -t18 + t76 * (t32 - t33) * 2.0
    t17 = t12 * t16 + -(t13 * t15)
    g6 = t79 - t76 * (t17 + t46) * 2.0
    t18 = t11 * t16 + -(t13 * t14)
    g7 = -t83 + t76 * (t18 + t45) * 2.0
    t19 = t11 * t15 + -(t12 * t14)
    g8 = -t80 - t76 * (t19 + t44) * 2.0
    g9 = -t79 + t76 * t17 * 2.0
    g10 = t83 - t76 * t18 * 2.0
    g11 = t80 + t76 * t19 * 2.0
    return ti.Vector([g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11])


@ti.func
def EE_3D_H(a0, a1, b0, b1):
    v01, v02, v03 = a0[0], a0[1], a0[2]
    v11, v12, v13 = a1[0], a1[1], a1[2]
    v21, v22, v23 = b0[0], b0[1], b0[2]
    v31, v32, v33 = b1[0], b1[1], b1[2]
    t11 = -v11 + v01
    t12 = -v12 + v02
    t13 = -v13 + v03
    t14 = -v21 + v01
    t15 = -v22 + v02
    t16 = -v23 + v03
    t26 = -v31 + v21
    t27 = -v32 + v22
    t28 = -v33 + v23
    t47 = t11 * t27
    t48 = t12 * t26
    t49 = t11 * t28
    t50 = t13 * t26
    t51 = t12 * t28
    t52 = t13 * t27
    t53 = t14 * t27
    t54 = t15 * t26
    t55 = t14 * t28
    t56 = t16 * t26
    t57 = t15 * t28
    t58 = t16 * t27
    t59 = t11 * t26 * 2.0
    t65 = t12 * t27 * 2.0
    t73 = t13 * t28 * 2.0
    t35 = t11 * t11 * 2.0
    t36 = t12 * t12 * 2.0
    t37 = t13 * t13 * 2.0
    t38 = t26 * t26 * 2.0
    t39 = t27 * t27 * 2.0
    t40 = t28 * t28 * 2.0
    t98 = t11 * t15 + -(t12 * t14)
    t99 = t11 * t16 + -(t13 * t14)
    t100 = t12 * t16 + -(t13 * t15)
    t101 = t47 + -t48
    t103 = t49 + -t50
    t105 = t51 + -t52
    t107 = t53 + -t54
    t108 = t55 + -t56
    t109 = t57 + -t58
    t137 = t98 + t101
    t138 = t99 + t103
    t139 = t100 + t105
    t140 = (t54 + -t53) + t101
    t141 = (t56 + -t55) + t103
    t142 = (t58 + -t57) + t105
    t143 = t12 * t101 * 2.0 + t13 * t103 * 2.0
    t144 = t11 * t103 * 2.0 + t12 * t105 * 2.0
    t145 = t27 * t101 * 2.0 + t28 * t103 * 2.0
    t146 = t26 * t103 * 2.0 + t27 * t105 * 2.0
    t147 = t11 * t101 * 2.0 + -(t13 * t105 * 2.0)
    t148 = t26 * t101 * 2.0 + -(t28 * t105 * 2.0)
    t156 = 1.0 / ((t101 * t101 + t103 * t103) + t105 * t105)
    t159 = (t16 * t101 + t14 * t105) + -(t15 * t103)
    t157 = t156 * t156
    t57 = ti.pow(t156, 3.0)
    t58 = t159 * t159
    t262 = t11 * t156 * t159 * 2.0
    t263 = t12 * t156 * t159 * 2.0
    t264 = t13 * t156 * t159 * 2.0
    t265 = t14 * t156 * t159 * 2.0
    t266 = t15 * t156 * t159 * 2.0
    t267 = t16 * t156 * t159 * 2.0
    t268 = (-v31 + v01) * t156 * t159 * 2.0
    t269 = (-v21 + v11) * t156 * t159 * 2.0
    t270 = (-v32 + v02) * t156 * t159 * 2.0
    t271 = (-v22 + v12) * t156 * t159 * 2.0
    t272 = (-v33 + v03) * t156 * t159 * 2.0
    t273 = (-v23 + v13) * t156 * t159 * 2.0
    t274 = (-v31 + v11) * t156 * t159 * 2.0
    t275 = (-v32 + v12) * t156 * t159 * 2.0
    t276 = (-v33 + v13) * t156 * t159 * 2.0
    t277 = t26 * t156 * t159 * 2.0
    t278 = t27 * t156 * t159 * 2.0
    t279 = t28 * t156 * t159 * 2.0
    t298 = t11 * t12 * t157 * t58 * 2.0
    t299 = t11 * t13 * t157 * t58 * 2.0
    t300 = t12 * t13 * t157 * t58 * 2.0
    t301 = t26 * t27 * t157 * t58 * 2.0
    t302 = t26 * t28 * t157 * t58 * 2.0
    t303 = t27 * t28 * t157 * t58 * 2.0
    t310 = (t35 + t36) * t157 * t58
    t311 = (t35 + t37) * t157 * t58
    t312 = (t36 + t37) * t157 * t58
    t313 = (t38 + t39) * t157 * t58
    t314 = (t38 + t40) * t157 * t58
    t315 = (t39 + t40) * t157 * t58
    t322 = (t59 + t65) * t157 * t58
    t323 = (t59 + t73) * t157 * t58
    t59 = (t65 + t73) * t157 * t58
    t325 = (t47 * 2.0 + -(t48 * 4.0)) * t157 * t58
    t53 = -t157 * t58
    t56 = t48 * 2.0 - t47 * 4.0
    t326 = t53 * t56
    t327 = (t49 * 2.0 + -(t50 * 4.0)) * t157 * t58
    t55 = t50 * 2.0 - t49 * 4.0
    t328 = t53 * t55
    t329 = (t51 * 2.0 + -(t52 * 4.0)) * t157 * t58
    t54 = t52 * 2.0 - t51 * 4.0
    t330 = t53 * t54
    t53 = t157 * t58
    t335 = t53 * t56
    t337 = t53 * t55
    t339 = t53 * t54
    t340 = t143 * t143 * t57 * t58 * 2.0
    t341 = t144 * t144 * t57 * t58 * 2.0
    t342 = t145 * t145 * t57 * t58 * 2.0
    t343 = t146 * t146 * t57 * t58 * 2.0
    t345 = t147 * t147 * t57 * t58 * 2.0
    t348 = t148 * t148 * t57 * t58 * 2.0
    t36 = t98 * t143 * t157 * t159 * 2.0
    t353 = t99 * t143 * t157 * t159 * 2.0
    t356 = t99 * t144 * t157 * t159 * 2.0
    t65 = t100 * t144 * t157 * t159 * 2.0
    t358 = t107 * t143 * t157 * t159 * 2.0
    t359 = t98 * t145 * t157 * t159 * 2.0
    t360 = t108 * t143 * t157 * t159 * 2.0
    t54 = t107 * t144 * t157 * t159 * 2.0
    t362 = t99 * t145 * t157 * t159 * 2.0
    t53 = t98 * t146 * t157 * t159 * 2.0
    t56 = t109 * t143 * t157 * t159 * 2.0
    t27 = t108 * t144 * t157 * t159 * 2.0
    t55 = t100 * t145 * t157 * t159 * 2.0
    t367 = t99 * t146 * t157 * t159 * 2.0
    t368 = t109 * t144 * t157 * t159 * 2.0
    t369 = t100 * t146 * t157 * t159 * 2.0
    t38 = t107 * t145 * t157 * t159 * 2.0
    t371 = t108 * t145 * t157 * t159 * 2.0
    t374 = t108 * t146 * t157 * t159 * 2.0
    t28 = t109 * t146 * t157 * t159 * 2.0
    t377 = t98 * t147 * t157 * t159 * 2.0
    t382 = t100 * t147 * t157 * t159 * 2.0
    t386 = t107 * t147 * t157 * t159 * 2.0
    t387 = t98 * t148 * t157 * t159 * 2.0
    t103 = t108 * t147 * t157 * t159 * 2.0
    t101 = t99 * t148 * t157 * t159 * 2.0
    t398 = t109 * t147 * t157 * t159 * 2.0
    t399 = t100 * t148 * t157 * t159 * 2.0
    t403 = t107 * t148 * t157 * t159 * 2.0
    t408 = t109 * t148 * t157 * t159 * 2.0
    t73 = t137 * t143 * t157 * t159 * 2.0
    t423 = t138 * t143 * t157 * t159 * 2.0
    t424 = t138 * t144 * t157 * t159 * 2.0
    t37 = t139 * t144 * t157 * t159 * 2.0
    t427 = t140 * t143 * t157 * t159 * 2.0
    t428 = t137 * t145 * t157 * t159 * 2.0
    t16 = t140 * t144 * t157 * t159 * 2.0
    t11 = t137 * t146 * t157 * t159 * 2.0
    t431 = t141 * t143 * t157 * t159 * 2.0
    t432 = t138 * t145 * t157 * t159 * 2.0
    t433 = t141 * t144 * t157 * t159 * 2.0
    t434 = t138 * t146 * t157 * t159 * 2.0
    t105 = t142 * t143 * t157 * t159 * 2.0
    t14 = t139 * t145 * t157 * t159 * 2.0
    t437 = t142 * t144 * t157 * t159 * 2.0
    t438 = t139 * t146 * t157 * t159 * 2.0
    t35 = t140 * t145 * t157 * t159 * 2.0
    t441 = t141 * t145 * t157 * t159 * 2.0
    t442 = t141 * t146 * t157 * t159 * 2.0
    t39 = t142 * t146 * t157 * t159 * 2.0
    t446 = t137 * t147 * t157 * t159 * 2.0
    t451 = t139 * t147 * t157 * t159 * 2.0
    t455 = t140 * t147 * t157 * t159 * 2.0
    t456 = t137 * t148 * t157 * t159 * 2.0
    t13 = t141 * t147 * t157 * t159 * 2.0
    t26 = t138 * t148 * t157 * t159 * 2.0
    t467 = t142 * t147 * t157 * t159 * 2.0
    t468 = t139 * t148 * t157 * t159 * 2.0
    t472 = t140 * t148 * t157 * t159 * 2.0
    t477 = t142 * t148 * t157 * t159 * 2.0
    t47 = t143 * t144 * t57 * t58 * 2.0
    t15 = t143 * t145 * t57 * t58 * 2.0
    t491 = t143 * t146 * t57 * t58 * 2.0
    t492 = t144 * t145 * t57 * t58 * 2.0
    t12 = t144 * t146 * t57 * t58 * 2.0
    t40 = t145 * t146 * t57 * t58 * 2.0
    t495 = t143 * t147 * t57 * t58 * 2.0
    t497 = t144 * t147 * t57 * t58 * 2.0
    t499 = t143 * t148 * t57 * t58 * 2.0
    t500 = t145 * t147 * t57 * t58 * 2.0
    t503 = t146 * t147 * t57 * t58 * 2.0
    t504 = t144 * t148 * t57 * t58 * 2.0
    t506 = t145 * t148 * t57 * t58 * 2.0
    t508 = t146 * t148 * t57 * t58 * 2.0
    t57 = t147 * t148 * t57 * t58 * 2.0
    t550 = ((((t98 * t109 * t156 * 2.0 + -t266) + t337) + t359) + t368) + t492
    t568 = ((((t108 * t137 * t156 * 2.0 + -t268) + t330) + t27) + t456) + t504
    t519_tmp = t139 * t143 * t157 * t159
    b_t519_tmp = t100 * t143 * t157 * t159
    t519 = (((-(t100 * t139 * t156 * 2.0) + t312) + -t340) + b_t519_tmp * 2.0) + t519_tmp * 2.0
    t520_tmp = t140 * t146 * t157 * t159
    b_t520_tmp = t107 * t146 * t157 * t159
    t520 = (((t107 * t140 * t156 * 2.0 + t313) + -t343) + b_t520_tmp * 2.0) + -(t520_tmp * 2.0)
    t521_tmp = t142 * t145 * t157 * t159
    b_t521_tmp = t109 * t145 * t157 * t159
    t521 = (((t109 * t142 * t156 * 2.0 + t315) + -t342) + -(b_t521_tmp * 2.0)) + t521_tmp * 2.0
    t522_tmp = t137 * t144 * t157 * t159
    b_t522_tmp = t98 * t144 * t157 * t159
    t522 = (((-(t98 * t137 * t156 * 2.0) + t310) + -t341) + -(b_t522_tmp * 2.0)) + -(t522_tmp * 2.0)
    t523_tmp = t138 * t147 * t157 * t159
    b_t523_tmp = t99 * t147 * t157 * t159
    t523 = (((-(t99 * t138 * t156 * 2.0) + t311) + -t345) + b_t523_tmp * 2.0) + t523_tmp * 2.0
    t524_tmp = t141 * t148 * t157 * t159
    b_t524_tmp = t108 * t148 * t157 * t159
    t524 = (((t108 * t141 * t156 * 2.0 + t314) + -t348) + -(b_t524_tmp * 2.0)) + t524_tmp * 2.0
    t525 = (((t98 * t100 * t156 * 2.0 + t299) + t65) + -t36) + -t47
    t526 = (((t107 * t109 * t156 * 2.0 + t302) + t38) + -t28) + -t40
    t527 = (((-(t98 * t99 * t156 * 2.0) + t300) + t377) + -t356) + t497
    t528 = (((-(t99 * t100 * t156 * 2.0) + t298) + t353) + t382) + -t495
    t529 = (((-(t107 * t108 * t156 * 2.0) + t303) + t374) + -t403) + t508
    t530 = (((-(t108 * t109 * t156 * 2.0) + t301) + -t371) + -t408) + -t506
    t531 = (((t98 * t107 * t156 * 2.0 + t322) + t54) + -t53) + -t12
    t532 = (((t100 * t109 * t156 * 2.0 + t59) + t55) + -t56) + -t15
    t533 = (((t99 * t108 * t156 * 2.0 + t323) + t101) + -t103) + -t57
    t534 = (((t98 * t140 * t156 * 2.0 + -t322) + t53) + t16) + t12
    t535 = (((-(t107 * t137 * t156 * 2.0) + -t322) + -t54) + t11) + t12
    t536 = (((t100 * t142 * t156 * 2.0 + -t59) + -t55) + -t105) + t15
    t537 = (((-(t109 * t139 * t156 * 2.0) + -t59) + t56) + -t14) + t15
    t538 = (((t99 * t141 * t156 * 2.0 + -t323) + -t101) + -t13) + t57
    t539 = (((-(t108 * t138 * t156 * 2.0) + -t323) + t103) + -t26) + t57
    t540 = (((t137 * t139 * t156 * 2.0 + t299) + t37) + -t73) + -t47
    t148 = (((t140 * t142 * t156 * 2.0 + t302) + t39) + -t35) + -t40
    t542 = (((-(t137 * t138 * t156 * 2.0) + t300) + t446) + -t424) + t497
    t543 = (((-(t138 * t139 * t156 * 2.0) + t298) + t423) + t451) + -t495
    t544 = (((-(t140 * t141 * t156 * 2.0) + t303) + t472) + -t442) + t508
    t53 = (((-(t141 * t142 * t156 * 2.0) + t301) + t441) + t477) + -t506
    t157 = (((-(t139 * t142 * t156 * 2.0) + t59) + t105) + t14) + -t15
    t159 = (((-(t137 * t140 * t156 * 2.0) + t322) + -t16) + -t11) + -t12
    t147 = (((-(t138 * t141 * t156 * 2.0) + t323) + t13) + t26) + -t57
    t146 = ((((t100 * t107 * t156 * 2.0 + t266) + t327) + -t358) + -t369) + t491
    t145 = ((((-(t99 * t107 * t156 * 2.0) + -t265) + t329) + t367) + t386) + -t503
    t144 = ((((-(t100 * t108 * t156 * 2.0) + -t267) + t325) + t360) + -t399) + t499
    t143 = ((((-(t99 * t109 * t156 * 2.0) + t267) + t335) + -t362) + t398) + t500
    t52 = ((((-(t98 * t108 * t156 * 2.0) + t265) + t339) + -t27) + -t387) + -t504
    t51 = ((((t109 * t140 * t156 * 2.0 + -t278) + -t302) + t28) + t35) + t40
    t50 = ((((-(t98 * t139 * t156 * 2.0) + t263) + -t299) + t36) + -t37) + t47
    t49 = ((((t107 * t142 * t156 * 2.0 + t278) + -t302) + -t38) + -t39) + t40
    t48 = ((((-(t100 * t137 * t156 * 2.0) + -t263) + -t299) + -t65) + t73) + t47
    t47 = ((((t99 * t137 * t156 * 2.0 + t262) + -t300) + t356) + -t446) + -t497
    t73 = ((((t100 * t138 * t156 * 2.0 + t264) + -t298) + -t382) + -t423) + t495
    t65 = ((((-(t109 * t141 * t156 * 2.0) + t279) + -t301) + t408) + -t441) + t506
    t59 = ((((t98 * t138 * t156 * 2.0 + -t262) + -t300) + -t377) + t424) + -t497
    t40 = ((((t99 * t139 * t156 * 2.0 + -t264) + -t298) + -t353) + -t451) + t495
    t39 = ((((-(t107 * t141 * t156 * 2.0) + -t277) + -t303) + t403) + t442) + -t508
    t38 = ((((-(t108 * t142 * t156 * 2.0) + -t279) + -t301) + t371) + -t477) + t506
    t37 = ((((-(t108 * t140 * t156 * 2.0) + t277) + -t303) + -t374) + -t472) + -t508
    t36 = ((((t98 * t142 * t156 * 2.0 + t271) + t328) + -t359) + t437) + -t492
    t35 = ((((-(t109 * t137 * t156 * 2.0) + t270) + t328) + -t368) + -t428) + -t492
    t28 = ((((t100 * t140 * t156 * 2.0 + -t271) + -t327) + t369) + -t427) + -t491
    t27 = ((((-(t98 * t141 * t156 * 2.0) + -t269) + t330) + t387) + -t433) + t504
    t26 = ((((t109 * t138 * t156 * 2.0 + -t272) + t326) + -t398) + t432) + -t500
    t13 = ((((-(t107 * t139 * t156 * 2.0) + -t270) + -t327) + t358) + t438) + -t491
    t12 = ((((-(t99 * t142 * t156 * 2.0) + -t273) + t326) + t362) + t467) + -t500
    t11 = ((((-(t99 * t140 * t156 * 2.0) + t269) + -t329) + -t367) + t455) + t503
    t16 = ((((t107 * t138 * t156 * 2.0 + t268) + -t329) + -t386) + -t434) + t503
    t15 = ((((-(t100 * t141 * t156 * 2.0) + t273) + -t325) + t399) + t431) + -t499
    t14 = ((((t108 * t139 * t156 * 2.0 + t272) + -t325) + -t360) + t468) + -t499
    t105 = ((((-(t139 * t140 * t156 * 2.0) + t275) + t327) + t427) + -t438) + t491
    t103 = ((((t138 * t140 * t156 * 2.0 + -t274) + t329) + t434) + -t455) + -t503
    t101 = ((((-(t137 * t142 * t156 * 2.0) + -t275) + t337) + t428) + -t437) + t492
    t58 = ((((t139 * t141 * t156 * 2.0 + -t276) + t325) + -t431) + -t468) + t499
    t57 = ((((t137 * t141 * t156 * 2.0 + t274) + t339) + t433) + -t456) + -t504
    t56 = ((((t138 * t142 * t156 * 2.0 + t276) + t335) + -t432) + -t467) + t500
    t55 = -t315 + t342
    H0 = (t55 + t142 * t142 * t156 * 2.0) - t521_tmp * 4.0
    H1 = t53
    H2 = t148
    H3 = t521
    H4 = t38
    H5 = t49
    H6 = t157
    H7 = t56
    H8 = t101
    H9 = t536
    H10 = t12
    H11 = t36
    H12 = t53
    t54 = -t314 + t348
    H13 = (t54 + t141 * t141 * t156 * 2.0) - t524_tmp * 4.0
    H14 = t544
    H15 = t65
    H16 = t524
    H17 = t39
    H18 = t58
    H19 = t147
    H20 = t57
    H21 = t15
    H22 = t538
    H23 = t27
    H24 = t148
    H25 = t544
    t53 = -t313 + t343
    H26 = (t53 + t140 * t140 * t156 * 2.0) + t520_tmp * 4.0
    H27 = t51
    H28 = t37
    H29 = t520
    H30 = t105
    H31 = t103
    H32 = t159
    H33 = t28
    H34 = t11
    H35 = t534
    H36 = t521
    H37 = t65
    H38 = t51
    H39 = (t55 + t109 * t109 * t156 * 2.0) + b_t521_tmp * 4.0
    H40 = t530
    H41 = t526
    H42 = t537
    H43 = t26
    H44 = t35
    H45 = t532
    H46 = t143
    H47 = t550
    H48 = t38
    H49 = t524
    H50 = t37
    H51 = t530
    H52 = (t54 + t108 * t108 * t156 * 2.0) + b_t524_tmp * 4.0
    H53 = t529
    H54 = t14
    H55 = t539
    H56 = t568
    H57 = t144
    H58 = t533
    H59 = t52
    H60 = t49
    H61 = t39
    H62 = t520
    H63 = t526
    H64 = t529
    H65 = (t53 + t107 * t107 * t156 * 2.0) - b_t520_tmp * 4.0
    H66 = t13
    H67 = t16
    H68 = t535
    H69 = t146
    H70 = t145
    H71 = t531
    H72 = t157
    H73 = t58
    H74 = t105
    H75 = t537
    H76 = t14
    H77 = t13
    t55 = -t312 + t340
    H78 = (t55 + t139 * t139 * t156 * 2.0) - t519_tmp * 4.0
    H79 = t543
    H80 = t540
    H81 = t519
    H82 = t40
    H83 = t50
    H84 = t56
    H85 = t147
    H86 = t103
    H87 = t26
    H88 = t539
    H89 = t16
    H90 = t543
    t54 = -t311 + t345
    H91 = (t54 + t138 * t138 * t156 * 2.0) - t523_tmp * 4.0
    H92 = t542
    H93 = t73
    H94 = t523
    H95 = t59
    H96 = t101
    H97 = t57
    H98 = t159
    H99 = t35
    H100 = t568
    H101 = t535
    H102 = t540
    H103 = t542
    t53 = -t310 + t341
    H104 = (t53 + t137 * t137 * t156 * 2.0) + t522_tmp * 4.0
    H105 = t48
    H106 = t47
    H107 = t522
    H108 = t536
    H109 = t15
    H110 = t28
    H111 = t532
    H112 = t144
    H113 = t146
    H114 = t519
    H115 = t73
    H116 = t48
    H117 = (t55 + t100 * t100 * t156 * 2.0) - b_t519_tmp * 4.0
    H118 = t528
    H119 = t525
    H120 = t12
    H121 = t538
    H122 = t11
    H123 = t143
    H124 = t533
    H125 = t145
    H126 = t40
    H127 = t523
    H128 = t47
    H129 = t528
    H130 = (t54 + t99 * t99 * t156 * 2.0) - b_t523_tmp * 4.0
    H131 = t527
    H132 = t36
    H133 = t27
    H134 = t534
    H135 = t550
    H136 = t52
    H137 = t531
    H138 = t50
    H139 = t59
    H140 = t522
    H141 = t525
    H142 = t527
    H143 = (t53 + t98 * t98 * t156 * 2.0) + b_t522_tmp * 4.0
    return ti.Matrix([[H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11],
                      [H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, H22, H23],
                      [H24, H25, H26, H27, H28, H29, H30, H31, H32, H33, H34, H35],
                      [H36, H37, H38, H39, H40, H41, H42, H43, H44, H45, H46, H47],
                      [H48, H49, H50, H51, H52, H53, H54, H55, H56, H57, H58, H59],
                      [H60, H61, H62, H63, H64, H65, H66, H67, H68, H69, H70, H71],
                      [H72, H73, H74, H75, H76, H77, H78, H79, H80, H81, H82, H83],
                      [H84, H85, H86, H87, H88, H89, H90, H91, H92, H93, H94, H95],
                      [H96, H97, H98, H99, H100, H101, H102, H103, H104, H105, H106, H107],
                      [H108, H109, H110, H111, H112, H113, H114, H115, H116, H117, H118, H119],
                      [H120, H121, H122, H123, H124, H125, H126, H127, H128, H129, H130, H131],
                      [H132, H133, H134, H135, H136, H137, H138, H139, H140, H141, H142, H143]])


@ti.func
def PE_3D_E(p, e0, e1):
    return (e0 - p).cross(e1 - p).norm_sqr() / (e1 - e0).norm_sqr()


@ti.func
def PE_3D_g(p, e0, e1):
    v01, v02, v03 = p[0], p[1], p[2]
    v11, v12, v13 = e0[0], e0[1], e0[2]
    v21, v22, v23 = e1[0], e1[1], e1[2]
    t17 = -v11 + v01
    t18 = -v12 + v02
    t19 = -v13 + v03
    t20 = -v21 + v01
    t21 = -v22 + v02
    t22 = -v23 + v03
    t23 = -v21 + v11
    t24 = -v22 + v12
    t25 = -v23 + v13
    t42 = 1.0 / ((t23 * t23 + t24 * t24) + t25 * t25)
    t44 = t17 * t21 + -(t18 * t20)
    t45 = t17 * t22 + -(t19 * t20)
    t46 = t18 * t22 + -(t19 * t21)
    t43 = t42 * t42
    t50 = (t44 * t44 + t45 * t45) + t46 * t46
    t51 = (v11 * 2.0 + -(v21 * 2.0)) * t43 * t50
    t52 = (v12 * 2.0 + -(v22 * 2.0)) * t43 * t50
    t43 = (v13 * 2.0 + -(v23 * 2.0)) * t43 * t50
    g0 = t42 * (t24 * t44 * 2.0 + t25 * t45 * 2.0)
    g1 = -t42 * (t23 * t44 * 2.0 - t25 * t46 * 2.0)
    g2 = -t42 * (t23 * t45 * 2.0 + t24 * t46 * 2.0)
    g3 = -t51 - t42 * (t21 * t44 * 2.0 + t22 * t45 * 2.0)
    g4 = -t52 + t42 * (t20 * t44 * 2.0 - t22 * t46 * 2.0)
    g5 = -t43 + t42 * (t20 * t45 * 2.0 + t21 * t46 * 2.0)
    g6 = t51 + t42 * (t18 * t44 * 2.0 + t19 * t45 * 2.0)
    g7 = t52 - t42 * (t17 * t44 * 2.0 - t19 * t46 * 2.0)
    g8 = t43 - t42 * (t17 * t45 * 2.0 + t18 * t46 * 2.0)
    return ti.Vector([g0, g1, g2, g3, g4, g5, g6, g7, g8])


@ti.func
def PE_3D_H(p, e0, e1):
    v01, v02, v03 = p[0], p[1], p[2]
    v11, v12, v13 = e0[0], e0[1], e0[2]
    v21, v22, v23 = e1[0], e1[1], e1[2]
    t17 = -v11 + v01
    t18 = -v12 + v02
    t19 = -v13 + v03
    t20 = -v21 + v01
    t21 = -v22 + v02
    t22 = -v23 + v03
    t23 = -v21 + v11
    t24 = -v22 + v12
    t25 = -v23 + v13
    t26 = v11 * 2.0 + -(v21 * 2.0)
    t27 = v12 * 2.0 + -(v22 * 2.0)
    t28 = v13 * 2.0 + -(v23 * 2.0)
    t35 = t23 * t23
    t36 = t24 * t24
    t37 = t25 * t25
    t50 = t17 * t21
    t51 = t18 * t20
    t52 = t17 * t22
    t53 = t19 * t20
    t54 = t18 * t22
    t55 = t19 * t21
    t56 = t17 * t20 * 2.0
    t62 = t18 * t21 * 2.0
    t70 = t19 * t22 * 2.0
    t71 = t17 * t23 * 2.0
    t75 = t18 * t24 * 2.0
    t79 = t19 * t25 * 2.0
    t80 = t20 * t23 * 2.0
    t84 = t21 * t24 * 2.0
    t88 = t22 * t25 * 2.0
    t38 = t17 * t17 * 2.0
    t39 = t18 * t18 * 2.0
    t40 = t19 * t19 * 2.0
    t41 = t20 * t20 * 2.0
    t42 = t21 * t21 * 2.0
    t43 = t22 * t22 * 2.0
    t44 = t35 * 2.0
    t46 = t36 * 2.0
    t48 = t37 * 2.0
    t57 = t50 * 2.0
    t58 = t51 * 2.0
    t60 = t52 * 2.0
    t63 = t53 * 2.0
    t65 = t54 * 2.0
    t67 = t55 * 2.0
    t102 = 1.0 / ((t35 + t36) + t37)
    t36 = t50 + -t51
    t35 = t52 + -t53
    t37 = t54 + -t55
    t103 = t102 * t102
    t104 = ti.pow(t102, 3.0)
    t162 = -(t23 * t24 * t102 * 2.0)
    t163 = -(t23 * t25 * t102 * 2.0)
    t164 = -(t24 * t25 * t102 * 2.0)
    t213 = t18 * t36 * 2.0 + t19 * t35 * 2.0
    t214 = t17 * t35 * 2.0 + t18 * t37 * 2.0
    t215 = t21 * t36 * 2.0 + t22 * t35 * 2.0
    t216 = t20 * t35 * 2.0 + t21 * t37 * 2.0
    t217 = t24 * t36 * 2.0 + t25 * t35 * 2.0
    t218 = t23 * t35 * 2.0 + t24 * t37 * 2.0
    t35 = (t36 * t36 + t35 * t35) + t37 * t37
    t225 = t17 * t36 * 2.0 + -(t19 * t37 * 2.0)
    t226 = t20 * t36 * 2.0 + -(t22 * t37 * 2.0)
    t227 = t23 * t36 * 2.0 + -(t25 * t37 * 2.0)
    t36 = t26 * t103
    t229 = t36 * t213
    t37 = t27 * t103
    t230 = t37 * t213
    t311 = t28 * t103
    t231 = t311 * t213
    t232 = t36 * t214
    t233 = t37 * t214
    t234 = t311 * t214
    t235 = t36 * t215
    t236 = t37 * t215
    t237 = t311 * t215
    t238 = t36 * t216
    t239 = t37 * t216
    t240 = t311 * t216
    t214 = t36 * t217
    t215 = t37 * t217
    t216 = t311 * t217
    t217 = t36 * t218
    t245 = t37 * t218
    t213 = t311 * t218
    t279 = t103 * t35 * 2.0
    t281 = t26 * t26 * t104 * t35 * 2.0
    t282 = t27 * t27 * t104 * t35 * 2.0
    t283 = t28 * t28 * t104 * t35 * 2.0
    t287 = t26 * t27 * t104 * t35 * 2.0
    t218 = t26 * t28 * t104 * t35 * 2.0
    t289 = t27 * t28 * t104 * t35 * 2.0
    t247 = t36 * t225
    t248 = t37 * t225
    t249 = t311 * t225
    t250 = t36 * t226
    t251 = t37 * t226
    t252 = t311 * t226
    t253 = t36 * t227
    t35 = t37 * t227
    t36 = t311 * t227
    t293 = t102 * (t75 + t79) + t214
    t295 = -(t102 * (t80 + t84)) + t213
    t299 = t102 * ((t63 + t22 * t23 * 2.0) + -t60) + t217
    t300 = t102 * ((t67 + t22 * t24 * 2.0) + -t65) + t245
    t303 = -(t102 * ((t57 + t17 * t24 * 2.0) + -t58)) + t215
    t304 = -(t102 * ((t60 + t17 * t25 * 2.0) + -t63)) + t216
    t294 = t102 * (t71 + t75) + -t213
    t297 = -(t102 * (t80 + t88)) + t35
    t88 = -(t102 * (t84 + t88)) + -t214
    t301 = t102 * ((t58 + t21 * t23 * 2.0) + -t57) + t253
    t302 = t102 * ((t65 + t21 * t25 * 2.0) + -t67) + t36
    t84 = t102 * ((t57 + t20 * t24 * 2.0) + -t58) + -t215
    t80 = t102 * ((t60 + t20 * t25 * 2.0) + -t63) + -t216
    t75 = -(t102 * ((t63 + t19 * t23 * 2.0) + -t60)) + -t217
    t227 = -(t102 * ((t67 + t19 * t24 * 2.0) + -t65)) + -t245
    t311 = ((-(t17 * t19 * t102 * 2.0) + t231) + -t232) + t218
    t245 = ((-(t20 * t22 * t102 * 2.0) + t237) + -t238) + t218
    t226 = ((-t102 * (t67 - t54 * 4.0) + t233) + t252) + -t289
    t28 = ((-t102 * (t63 - t52 * 4.0) + t232) + -t237) + -t218
    t27 = ((-t102 * (t58 - t50 * 4.0) + t247) + -t236) + -t287
    t225 = ((-(t102 * (t65 + -(t55 * 4.0))) + t239) + t249) + -t289
    t26 = ((-(t102 * (t60 + -(t53 * 4.0))) + t238) + -t231) + -t218
    t103 = ((-(t102 * (t57 + -(t51 * 4.0))) + t250) + -t230) + -t287
    t104 = (((-(t102 * (t56 + t62)) + t234) + t240) + t279) + -t283
    t218 = (((-(t102 * (t56 + t70)) + t248) + t251) + t279) + -t282
    t217 = (((-(t102 * (t62 + t70)) + -t229) + -t235) + t279) + -t281
    t216 = t102 * (t71 + t79) + -t35
    t215 = -(t102 * ((t58 + t18 * t23 * 2.0) + -t57)) + -t253
    t214 = -(t102 * ((t65 + t18 * t25 * 2.0) + -t67)) + -t36
    t213 = ((-(t17 * t18 * t102 * 2.0) + t230) + -t247) + t287
    t37 = ((-(t20 * t21 * t102 * 2.0) + t236) + -t250) + t287
    t36 = ((-(t18 * t19 * t102 * 2.0) + -t233) + -t249) + t289
    t35 = ((-(t21 * t22 * t102 * 2.0) + -t239) + -t252) + t289
    H0 = t102 * (t46 + t48)
    H1 = t162
    H2 = t163
    H3 = t88
    H4 = t84
    H5 = t80
    H6 = t293
    H7 = t303
    H8 = t304
    H9 = t162
    H10 = t102 * (t44 + t48)
    H11 = t164
    H12 = t301
    H13 = t297
    H14 = t302
    H15 = t215
    H16 = t216
    H17 = t214
    H18 = t163
    H19 = t164
    H20 = t102 * (t44 + t46)
    H21 = t299
    H22 = t300
    H23 = t295
    H24 = t75
    H25 = t227
    H26 = t294
    H27 = t88
    H28 = t301
    H29 = t299
    H30 = ((t235 * 2.0 + -t279) + t281) + t102 * (t42 + t43)
    H31 = t37
    H32 = t245
    H33 = t217
    H34 = t27
    H35 = t28
    H36 = t84
    H37 = t297
    H38 = t300
    H39 = t37
    H40 = ((t251 * -2.0 + -t279) + t282) + t102 * (t41 + t43)
    H41 = t35
    H42 = t103
    H43 = t218
    H44 = t226
    H45 = t80
    H46 = t302
    H47 = t295
    H48 = t245
    H49 = t35
    H50 = ((t240 * -2.0 + -t279) + t283) + t102 * (t41 + t42)
    H51 = t26
    H52 = t225
    H53 = t104
    H54 = t293
    H55 = t215
    H56 = t75
    H57 = t217
    H58 = t103
    H59 = t26
    H60 = ((t229 * 2.0 + -t279) + t281) + t102 * (t39 + t40)
    H61 = t213
    H62 = t311
    H63 = t303
    H64 = t216
    H65 = t227
    H66 = t27
    H67 = t218
    H68 = t225
    H69 = t213
    H70 = ((t248 * -2.0 + -t279) + t282) + t102 * (t38 + t40)
    H71 = t36
    H72 = t304
    H73 = t214
    H74 = t294
    H75 = t28
    H76 = t226
    H77 = t104
    H78 = t311
    H79 = t36
    H80 = ((t234 * -2.0 + -t279) + t283) + t102 * (t38 + t39)
    return ti.Matrix([[H0, H1, H2, H3, H4, H5, H6, H7, H8],
                      [H9, H10, H11, H12, H13, H14, H15, H16, H17],
                      [H18, H19, H20, H21, H22, H23, H24, H25, H26],
                      [H27, H28, H29, H30, H31, H32, H33, H34, H35],
                      [H36, H37, H38, H39, H40, H41, H42, H43, H44],
                      [H45, H46, H47, H48, H49, H50, H51, H52, H53],
                      [H54, H55, H56, H57, H58, H59, H60, H61, H62],
                      [H63, H64, H65, H66, H67, H68, H69, H70, H71],
                      [H72, H73, H74, H75, H76, H77, H78, H79, H80]])


@ti.func
def PP_3D_E(a, b):
    return (a - b).norm_sqr()


@ti.func
def PP_3D_g(a, b):
    ab2 = 2.0 * (a - b)
    return ti.Matrix([ab2[0], ab2[1], ab2[2], -ab2[0], -ab2[1], -ab2[2]])


@ti.func
def PP_3D_H(a, b):
    return ti.Matrix([[2.0, 0.0, 0.0, -2.0, 0.0, 0.0],
                      [0.0, 2.0, 0.0, 0.0, -2.0, 0.0],
                      [0.0, 0.0, 2.0, 0.0, 0.0, -2.0],
                      [-2.0, 0.0, 0.0, 2.0, 0.0, 0.0],
                      [0.0, -2.0, 0.0, 0.0, 2.0, 0.0],
                      [0.0, 0.0, -2.0, 0.0, 0.0, 2.0]])


@ti.func
def PT_3D_E(p, t0, t1, t2):
    b = (t1 - t0).cross(t2 - t0)
    aTb = (p - t0).dot(b)
    return aTb * aTb / b.norm_sqr()


@ti.func
def PT_3D_g(p, t0, t1, t2):
    v01, v02, v03 = p[0], p[1], p[2]
    v11, v12, v13 = t0[0], t0[1], t0[2]
    v21, v22, v23 = t1[0], t1[1], t1[2]
    v31, v32, v33 = t2[0], t2[1], t2[2]
    t11 = -v11 + v01
    t12 = -v12 + v02
    t13 = -v13 + v03
    t14 = -v21 + v11
    t15 = -v22 + v12
    t16 = -v23 + v13
    t17 = -v31 + v11
    t18 = -v32 + v12
    t19 = -v33 + v13
    t20 = -v31 + v21
    t21 = -v32 + v22
    t22 = -v33 + v23
    t32 = t14 * t18 + -(t15 * t17)
    t33 = t14 * t19 + -(t16 * t17)
    t34 = t15 * t19 + -(t16 * t18)
    t43 = 1.0 / ((t32 * t32 + t33 * t33) + t34 * t34)
    t45 = (t13 * t32 + t11 * t34) + -(t12 * t33)
    t44 = t43 * t43
    t46 = t45 * t45
    g0 = t34 * t43 * t45 * 2.0
    g1 = t33 * t43 * t45 * -2.0
    g2 = t32 * t43 * t45 * 2.0
    t45 *= t43
    g3 = -t44 * t46 * (t21 * t32 * 2.0 + t22 * t33 * 2.0) - t45 * ((t34 + t12 * t22) - t13 * t21) * 2.0
    t43 = t44 * t46
    g4 = t43 * (t20 * t32 * 2.0 - t22 * t34 * 2.0) + t45 * ((t33 + t11 * t22) - t13 * t20) * 2.0
    g5 = t43 * (t20 * t33 * 2.0 + t21 * t34 * 2.0) - t45 * ((t32 + t11 * t21) - t12 * t20) * 2.0
    g6 = t45 * (t12 * t19 - t13 * t18) * 2.0 + t43 * (t18 * t32 * 2.0 + t19 * t33 * 2.0)
    g7 = t45 * (t11 * t19 - t13 * t17) * -2.0 - t43 * (t17 * t32 * 2.0 - t19 * t34 * 2.0)
    g8 = t45 * (t11 * t18 - t12 * t17) * 2.0 - t43 * (t17 * t33 * 2.0 + t18 * t34 * 2.0)
    g9 = t45 * (t12 * t16 - t13 * t15) * -2.0 - t43 * (t15 * t32 * 2.0 + t16 * t33 * 2.0)
    g10 = t45 * (t11 * t16 - t13 * t14) * 2.0 + t43 * (t14 * t32 * 2.0 - t16 * t34 * 2.0)
    g11 = t45 * (t11 * t15 - t12 * t14) * -2.0 + t43 * (t14 * t33 * 2.0 + t15 * t34 * 2.0)
    return ti.Vector([g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11])


@ti.func
def PT_3D_H(p, t0, t1, t2):
    v01, v02, v03 = p[0], p[1], p[2]
    v11, v12, v13 = t0[0], t0[1], t0[2]
    v21, v22, v23 = t1[0], t1[1], t1[2]
    v31, v32, v33 = t2[0], t2[1], t2[2]
    t11 = -v11 + v01
    t12 = -v12 + v02
    t13 = -v13 + v03
    t18 = -v21 + v11
    t20 = -v22 + v12
    t22 = -v23 + v13
    t23 = -v31 + v11
    t24 = -v32 + v12
    t25 = -v33 + v13
    t26 = -v31 + v21
    t27 = -v32 + v22
    t28 = -v33 + v23
    t65 = t18 * t24
    t66 = t20 * t23
    t67 = t18 * t25
    t68 = t22 * t23
    t69 = t20 * t25
    t70 = t22 * t24
    t71 = t18 * t23 * 2.0
    t77 = t20 * t24 * 2.0
    t85 = t22 * t25 * 2.0
    t86 = t18 * t26 * 2.0
    t90 = t20 * t27 * 2.0
    t94 = t22 * t28 * 2.0
    t95 = t23 * t26 * 2.0
    t99 = t24 * t27 * 2.0
    t103 = t25 * t28 * 2.0
    t38 = t18 * t18 * 2.0
    t39 = t20 * t20 * 2.0
    t40 = t22 * t22 * 2.0
    t41 = t23 * t23 * 2.0
    t42 = t24 * t24 * 2.0
    t43 = t25 * t25 * 2.0
    t44 = t26 * t26 * 2.0
    t45 = t27 * t27 * 2.0
    t46 = t28 * t28 * 2.0
    t72 = t65 * 2.0
    t73 = t66 * 2.0
    t75 = t67 * 2.0
    t78 = t68 * 2.0
    t80 = t69 * 2.0
    t82 = t70 * 2.0
    t125 = t11 * t20 + -(t12 * t18)
    t126 = t11 * t22 + -(t13 * t18)
    t127 = t12 * t22 + -(t13 * t20)
    t128 = t11 * t24 + -(t12 * t23)
    t129 = t11 * t25 + -(t13 * t23)
    t130 = t12 * t25 + -(t13 * t24)
    t131 = t65 + -t66
    t133 = t67 + -t68
    t135 = t69 + -t70
    t149 = t131 * t131
    t150 = t133 * t133
    t151 = t135 * t135
    t189 = (t11 * t27 + -(t12 * t26)) + t131
    t190 = (t11 * t28 + -(t13 * t26)) + t133
    t191 = (t12 * t28 + -(t13 * t27)) + t135
    t192 = t20 * t131 * 2.0 + t22 * t133 * 2.0
    t193 = t18 * t133 * 2.0 + t20 * t135 * 2.0
    t194 = t24 * t131 * 2.0 + t25 * t133 * 2.0
    t195 = t23 * t133 * 2.0 + t24 * t135 * 2.0
    t196 = t27 * t131 * 2.0 + t28 * t133 * 2.0
    t197 = t26 * t133 * 2.0 + t27 * t135 * 2.0
    t198 = t18 * t131 * 2.0 + -(t22 * t135 * 2.0)
    t199 = t23 * t131 * 2.0 + -(t25 * t135 * 2.0)
    t200 = t26 * t131 * 2.0 + -(t28 * t135 * 2.0)
    t202 = 1.0 / ((t149 + t150) + t151)
    t205 = (t13 * t131 + t11 * t135) + -(t12 * t133)
    t203 = t202 * t202
    t204 = ti.pow(t202, 3.0)
    t206 = t205 * t205
    t241 = t131 * t135 * t202 * 2.0
    t309 = t11 * t202 * t205 * 2.0
    t310 = t12 * t202 * t205 * 2.0
    t13 = t13 * t202 * t205 * 2.0
    t312 = (-v21 + v01) * t202 * t205 * 2.0
    t313 = (-v22 + v02) * t202 * t205 * 2.0
    t314 = (-v23 + v03) * t202 * t205 * 2.0
    t315 = (-v31 + v01) * t202 * t205 * 2.0
    t316 = t18 * t202 * t205 * 2.0
    t317 = (-v32 + v02) * t202 * t205 * 2.0
    t318 = t20 * t202 * t205 * 2.0
    t319 = (-v33 + v03) * t202 * t205 * 2.0
    t11 = t22 * t202 * t205 * 2.0
    t321 = t23 * t202 * t205 * 2.0
    t322 = t24 * t202 * t205 * 2.0
    t323 = t25 * t202 * t205 * 2.0
    t324 = t26 * t202 * t205 * 2.0
    t325 = t27 * t202 * t205 * 2.0
    t12 = t28 * t202 * t205 * 2.0
    t261 = -(t131 * t133 * t202 * 2.0)
    t262 = -(t133 * t135 * t202 * 2.0)
    t599 = t130 * t135 * t202 * 2.0 + t135 * t194 * t203 * t205 * 2.0
    t600 = -(t125 * t131 * t202 * 2.0) + t131 * t193 * t203 * t205 * 2.0
    t602 = t129 * t133 * t202 * 2.0 + t133 * t199 * t203 * t205 * 2.0
    t605 = -(t131 * t189 * t202 * 2.0) + t131 * t197 * t203 * t205 * 2.0
    t609 = (t127 * t133 * t202 * 2.0 + -t11) + t133 * t192 * t203 * t205 * 2.0
    t610 = (t126 * t135 * t202 * 2.0 + t11) + t135 * t198 * t203 * t205 * 2.0
    t611 = (t130 * t131 * t202 * 2.0 + -t322) + t131 * t194 * t203 * t205 * 2.0
    t613 = (t126 * t131 * t202 * 2.0 + -t316) + t131 * t198 * t203 * t205 * 2.0
    t615 = (-(t125 * t135 * t202 * 2.0) + -t318) + t135 * t193 * t203 * t205 * 2.0
    t616 = (-(t128 * t133 * t202 * 2.0) + -t321) + t133 * t195 * t203 * t205 * 2.0
    t621 = (t133 * t191 * t202 * 2.0 + -t12) + t133 * t196 * t203 * t205 * 2.0
    t622 = (t135 * t190 * t202 * 2.0 + t12) + t135 * t200 * t203 * t205 * 2.0
    t623 = (t131 * t190 * t202 * 2.0 + -t324) + t131 * t200 * t203 * t205 * 2.0
    t625 = (-(t135 * t189 * t202 * 2.0) + -t325) + t135 * t197 * t203 * t205 * 2.0
    t645 = ((((t127 * t129 * t202 * 2.0 + -t13) + (t72 + -(t66 * 4.0)) * t203 * t206) + t129 * t192 * t203 * t205 * 2.0) + t127 * t199 * t203 * t205 * 2.0) + t192 * t199 * t204 * t206 * 2.0
    t646_tmp = t203 * t206
    t646 = ((((t126 * t130 * t202 * 2.0 + t13) + t646_tmp * (t73 - t65 * 4.0)) + t126 * t194 * t203 * t205 * 2.0) + t130 * t198 * t203 * t205 * 2.0) + t194 * t198 * t204 * t206 * 2.0
    t601 = t128 * t131 * t202 * 2.0 + -(t131 * t195 * t203 * t205 * 2.0)
    t603 = -(t127 * t135 * t202 * 2.0) + -(t135 * t192 * t203 * t205 * 2.0)
    t604 = -(t126 * t133 * t202 * 2.0) + -(t133 * t198 * t203 * t205 * 2.0)
    t606 = -(t135 * t191 * t202 * 2.0) + -(t135 * t196 * t203 * t205 * 2.0)
    t607 = -(t133 * t190 * t202 * 2.0) + -(t133 * t200 * t203 * t205 * 2.0)
    t608 = (t125 * t133 * t202 * 2.0 + t316) + -(t133 * t193 * t203 * t205 * 2.0)
    t612 = (t128 * t135 * t202 * 2.0 + t322) + -(t135 * t195 * t203 * t205 * 2.0)
    t614 = (-(t127 * t131 * t202 * 2.0) + t318) + -(t131 * t192 * t203 * t205 * 2.0)
    t617 = (-(t130 * t133 * t202 * 2.0) + t323) + -(t133 * t194 * t203 * t205 * 2.0)
    t618 = (-(t129 * t131 * t202 * 2.0) + t321) + -(t131 * t199 * t203 * t205 * 2.0)
    t619 = (-(t129 * t135 * t202 * 2.0) + -t323) + -(t135 * t199 * t203 * t205 * 2.0)
    t620 = (t133 * t189 * t202 * 2.0 + t324) + -(t133 * t197 * t203 * t205 * 2.0)
    t624 = (-(t131 * t191 * t202 * 2.0) + t325) + -(t131 * t196 * t203 * t205 * 2.0)
    t626 = (((t125 * t127 * t202 * 2.0 + t18 * t22 * t203 * t206 * 2.0) + t125 * t192 * t203 * t205 * 2.0) + -(t127 * t193 * t203 * t205 * 2.0)) + -(t192 * t193 * t204 * t206 * 2.0)
    t627 = (((t128 * t130 * t202 * 2.0 + t23 * t25 * t203 * t206 * 2.0) + t128 * t194 * t203 * t205 * 2.0) + -(t130 * t195 * t203 * t205 * 2.0)) + -(t194 * t195 * t204 * t206 * 2.0)
    t628 = (((-(t125 * t126 * t202 * 2.0) + t20 * t22 * t203 * t206 * 2.0) + t126 * t193 * t203 * t205 * 2.0) + -(t125 * t198 * t203 * t205 * 2.0)) + t193 * t198 * t204 * t206 * 2.0
    t629 = (((-(t128 * t129 * t202 * 2.0) + t24 * t25 * t203 * t206 * 2.0) + t129 * t195 * t203 * t205 * 2.0) + -(t128 * t199 * t203 * t205 * 2.0)) + t195 * t199 * t204 * t206 * 2.0
    t630 = (((-(t126 * t127 * t202 * 2.0) + t18 * t20 * t203 * t206 * 2.0) + -(t126 * t192 * t203 * t205 * 2.0)) + -(t127 * t198 * t203 * t205 * 2.0)) + -(t192 * t198 * t204 * t206 * 2.0)
    t631 = (((-(t129 * t130 * t202 * 2.0) + t23 * t24 * t203 * t206 * 2.0) + -(t129 * t194 * t203 * t205 * 2.0)) + -(t130 * t199 * t203 * t205 * 2.0)) + -(t194 * t199 * t204 * t206 * 2.0)
    t632 = (((-(t125 * t128 * t202 * 2.0) + (t71 + t77) * t203 * t206) + t128 * t193 * t203 * t205 * 2.0) + t125 * t195 * t203 * t205 * 2.0) + -(t193 * t195 * t204 * t206 * 2.0)
    t633 = (((-(t127 * t130 * t202 * 2.0) + (t77 + t85) * t203 * t206) + -(t130 * t192 * t203 * t205 * 2.0)) + -(t127 * t194 * t203 * t205 * 2.0)) + -(t192 * t194 * t204 * t206 * 2.0)
    t634 = (((-(t126 * t129 * t202 * 2.0) + (t71 + t85) * t203 * t206) + -(t129 * t198 * t203 * t205 * 2.0)) + -(t126 * t199 * t203 * t205 * 2.0)) + -(t198 * t199 * t204 * t206 * 2.0)
    t635 = (((t127 * t191 * t202 * 2.0 + -((t90 + t94) * t203 * t206)) + t127 * t196 * t203 * t205 * 2.0) + t191 * t192 * t203 * t205 * 2.0) + t192 * t196 * t204 * t206 * 2.0
    t636 = (((-(t128 * t189 * t202 * 2.0) + (t95 + t99) * t203 * t206) + t128 * t197 * t203 * t205 * 2.0) + t189 * t195 * t203 * t205 * 2.0) + -(t195 * t197 * t204 * t206 * 2.0)
    t637 = (((t125 * t189 * t202 * 2.0 + -((t86 + t90) * t203 * t206)) + -(t125 * t197 * t203 * t205 * 2.0)) + -(t189 * t193 * t203 * t205 * 2.0)) + t193 * t197 * t204 * t206 * 2.0
    t638 = (((-(t130 * t191 * t202 * 2.0) + (t99 + t103) * t203 * t206) + -(t130 * t196 * t203 * t205 * 2.0)) + -(t191 * t194 * t203 * t205 * 2.0)) + -(t194 * t196 * t204 * t206 * 2.0)
    t86 = (((t126 * t190 * t202 * 2.0 + -((t86 + t94) * t203 * t206)) + t126 * t200 * t203 * t205 * 2.0) + t190 * t198 * t203 * t205 * 2.0) + t198 * t200 * t204 * t206 * 2.0
    t71 = (((-(t129 * t190 * t202 * 2.0) + (t95 + t103) * t203 * t206) + -(t129 * t200 * t203 * t205 * 2.0)) + -(t190 * t199 * t203 * t205 * 2.0)) + -(t199 * t200 * t204 * t206 * 2.0)
    t85 = (((t189 * t191 * t202 * 2.0 + t26 * t28 * t203 * t206 * 2.0) + t189 * t196 * t203 * t205 * 2.0) + -(t191 * t197 * t203 * t205 * 2.0)) + -(t196 * t197 * t204 * t206 * 2.0)
    t90 = (((-(t189 * t190 * t202 * 2.0) + t27 * t28 * t203 * t206 * 2.0) + t190 * t197 * t203 * t205 * 2.0) + -(t189 * t200 * t203 * t205 * 2.0)) + t197 * t200 * t204 * t206 * 2.0
    t99 = (((-(t190 * t191 * t202 * 2.0) + t26 * t27 * t203 * t206 * 2.0) + -(t190 * t196 * t203 * t205 * 2.0)) + -(t191 * t200 * t203 * t205 * 2.0)) + -(t196 * t200 * t204 * t206 * 2.0)
    t77 = ((((-(t127 * t128 * t202 * 2.0) + t310) + (t75 + -(t68 * 4.0)) * t203 * t206) + t127 * t195 * t203 * t205 * 2.0) + -(t128 * t192 * t203 * t205 * 2.0)) + t192 * t195 * t204 * t206 * 2.0
    t131 = ((((t126 * t128 * t202 * 2.0 + -t309) + (t80 + -(t70 * 4.0)) * t203 * t206) + t128 * t198 * t203 * t205 * 2.0) + -(t126 * t195 * t203 * t205 * 2.0)) + -(t195 * t198 * t204 * t206 * 2.0)
    t133 = ((((-(t125 * t130 * t202 * 2.0) + -t310) + t646_tmp * (t78 - t67 * 4.0)) + t130 * t193 * t203 * t205 * 2.0) + -(t125 * t194 * t203 * t205 * 2.0)) + t193 * t194 * t204 * t206 * 2.0
    t325 = ((((t125 * t129 * t202 * 2.0 + t309) + t646_tmp * (t82 - t69 * 4.0)) + t125 * t199 * t203 * t205 * 2.0) + -(t129 * t193 * t203 * t205 * 2.0)) + -(t193 * t199 * t204 * t206 * 2.0)
    t135 = ((((t125 * t191 * t202 * 2.0 + t313) + ((t75 + t18 * t28 * 2.0) + -t78) * t203 * t206) + t125 * t196 * t203 * t205 * 2.0) + -(t191 * t193 * t203 * t205 * 2.0)) + -(t193 * t196 * t204 * t206 * 2.0)
    t324 = ((((t127 * t189 * t202 * 2.0 + -t313) + ((t78 + t22 * t26 * 2.0) + -t75) * t203 * t206) + -(t127 * t197 * t203 * t205 * 2.0)) + t189 * t192 * t203 * t205 * 2.0) + -(t192 * t197 * t204 * t206 * 2.0)
    t318 = ((((-(t126 * t189 * t202 * 2.0) + t312) + ((t82 + t22 * t27 * 2.0) + -t80) * t203 * t206) + t126 * t197 * t203 * t205 * 2.0) + -(t189 * t198 * t203 * t205 * 2.0)) + t197 * t198 * t204 * t206 * 2.0
    t321 = ((((-(t130 * t189 * t202 * 2.0) + t317) + -(((t78 + t25 * t26 * 2.0) + -t75) * t203 * t206)) + t130 * t197 * t203 * t205 * 2.0) + -(t189 * t194 * t203 * t205 * 2.0)) + t194 * t197 * t204 * t206 * 2.0
    t323 = ((((t129 * t191 * t202 * 2.0 + t319) + -(((t72 + t23 * t27 * 2.0) + -t73) * t203 * t206)) + t129 * t196 * t203 * t205 * 2.0) + t191 * t199 * t203 * t205 * 2.0) + t196 * t199 * t204 * t206 * 2.0
    t322 = ((((-(t125 * t190 * t202 * 2.0) + -t312) + ((t80 + t20 * t28 * 2.0) + -t82) * t203 * t206) + -(t125 * t200 * t203 * t205 * 2.0)) + t190 * t193 * t203 * t205 * 2.0) + t193 * t200 * t204 * t206 * 2.0
    t316 = ((((t130 * t190 * t202 * 2.0 + -t319) + -(((t73 + t24 * t26 * 2.0) + -t72) * t203 * t206)) + t130 * t200 * t203 * t205 * 2.0) + t190 * t194 * t203 * t205 * 2.0) + t194 * t200 * t204 * t206 * 2.0
    t65 = ((((-(t128 * t191 * t202 * 2.0) + -t317) + -(((t75 + t23 * t28 * 2.0) + -t78) * t203 * t206)) + -(t128 * t196 * t203 * t205 * 2.0)) + t191 * t195 * t203 * t205 * 2.0) + t195 * t196 * t204 * t206 * 2.0
    t66 = ((((-(t127 * t190 * t202 * 2.0) + t314) + ((t73 + t20 * t26 * 2.0) + -t72) * t203 * t206) + -(t127 * t200 * t203 * t205 * 2.0)) + -(t190 * t192 * t203 * t205 * 2.0)) + -(t192 * t200 * t204 * t206 * 2.0)
    t13 = ((((t128 * t190 * t202 * 2.0 + t315) + -(((t80 + t24 * t28 * 2.0) + -t82) * t203 * t206)) + t128 * t200 * t203 * t205 * 2.0) + -(t190 * t195 * t203 * t205 * 2.0)) + -(t195 * t200 * t204 * t206 * 2.0)
    t12 = ((((-(t126 * t191 * t202 * 2.0) + -t314) + ((t72 + t18 * t27 * 2.0) + -t73) * t203 * t206) + -(t126 * t196 * t203 * t205 * 2.0)) + -(t191 * t198 * t203 * t205 * 2.0)) + -(t196 * t198 * t204 * t206 * 2.0)
    t11 = ((((t129 * t189 * t202 * 2.0 + -t315) + -(((t82 + t25 * t27 * 2.0) + -t80) * t203 * t206)) + -(t129 * t197 * t203 * t205 * 2.0)) + t189 * t199 * t203 * t205 * 2.0) + -(t197 * t199 * t204 * t206 * 2.0)
    H0 = t151 * t202 * 2.0
    H1 = t262
    H2 = t241
    H3 = t606
    H4 = t622
    H5 = t625
    H6 = t599
    H7 = t619
    H8 = t612
    H9 = t603
    H10 = t610
    H11 = t615
    H12 = t262
    H13 = t150 * t202 * 2.0
    H14 = t261
    H15 = t621
    H16 = t607
    H17 = t620
    H18 = t617
    H19 = t602
    H20 = t616
    H21 = t609
    H22 = t604
    H23 = t608
    H24 = t241
    H25 = t261
    H26 = t149 * t202 * 2.0
    H27 = t624
    H28 = t623
    H29 = t605
    H30 = t611
    H31 = t618
    H32 = t601
    H33 = t614
    H34 = t613
    H35 = t600
    H36 = t606
    H37 = t621
    H38 = t624
    H39 = ((t191 * t191 * t202 * 2.0 + t196 * t196 * t204 * t206 * 2.0) - t646_tmp * (t45 + t46)) + t191 * t196 * t203 * t205 * 4.0
    H40 = t99
    H41 = t85
    H42 = t638
    H43 = t323
    H44 = t65
    H45 = t635
    H46 = t12
    H47 = t135
    H48 = t622
    H49 = t607
    H50 = t623
    H51 = t99
    H52 = ((t190 * t190 * t202 * 2.0 + t200 * t200 * t204 * t206 * 2.0) - t646_tmp * (t44 + t46)) + t190 * t200 * t203 * t205 * 4.0
    H53 = t90
    H54 = t316
    H55 = t71
    H56 = t13
    H57 = t66
    H58 = t86
    H59 = t322
    H60 = t625
    H61 = t620
    H62 = t605
    H63 = t85
    H64 = t90
    H65 = ((t189 * t189 * t202 * 2.0 + t197 * t197 * t204 * t206 * 2.0) - t646_tmp * (t44 + t45)) - t189 * t197 * t203 * t205 * 4.0
    H66 = t321
    H67 = t11
    H68 = t636
    H69 = t324
    H70 = t318
    H71 = t637
    H72 = t599
    H73 = t617
    H74 = t611
    H75 = t638
    H76 = t316
    H77 = t321
    H78 = ((t130 * t130 * t202 * 2.0 + t194 * t194 * t204 * t206 * 2.0) - t646_tmp * (t42 + t43)) + t130 * t194 * t203 * t205 * 4.0
    H79 = t631
    H80 = t627
    H81 = t633
    H82 = t646
    H83 = t133
    H84 = t619
    H85 = t602
    H86 = t618
    H87 = t323
    H88 = t71
    H89 = t11
    H90 = t631
    H91 = ((t129 * t129 * t202 * 2.0 + t199 * t199 * t204 * t206 * 2.0) - t646_tmp * (t41 + t43)) + t129 * t199 * t203 * t205 * 4.0
    H92 = t629
    H93 = t645
    H94 = t634
    H95 = t325
    H96 = t612
    H97 = t616
    H98 = t601
    H99 = t65
    H100 = t13
    H101 = t636
    H102 = t627
    H103 = t629
    H104 = ((t128 * t128 * t202 * 2.0 + t195 * t195 * t204 * t206 * 2.0) - t646_tmp * (t41 + t42)) - t128 * t195 * t203 * t205 * 4.0
    H105 = t77
    H106 = t131
    H107 = t632
    H108 = t603
    H109 = t609
    H110 = t614
    H111 = t635
    H112 = t66
    H113 = t324
    H114 = t633
    H115 = t645
    H116 = t77
    H117 = ((t127 * t127 * t202 * 2.0 + t192 * t192 * t204 * t206 * 2.0) - t646_tmp * (t39 + t40)) + t127 * t192 * t203 * t205 * 4.0
    H118 = t630
    H119 = t626
    H120 = t610
    H121 = t604
    H122 = t613
    H123 = t12
    H124 = t86
    H125 = t318
    H126 = t646
    H127 = t634
    H128 = t131
    H129 = t630
    H130 = ((t126 * t126 * t202 * 2.0 + t198 * t198 * t204 * t206 * 2.0) - t646_tmp * (t38 + t40)) + t126 * t198 * t203 * t205 * 4.0
    H131 = t628
    H132 = t615
    H133 = t608
    H134 = t600
    H135 = t135
    H136 = t322
    H137 = t637
    H138 = t133
    H139 = t325
    H140 = t632
    H141 = t626
    H142 = t628
    H143 = ((t125 * t125 * t202 * 2.0 + t193 * t193 * t204 * t206 * 2.0) - t646_tmp * (t38 + t39)) - t125 * t193 * t203 * t205 * 4.0
    return ti.Matrix([[H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11],
                      [H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, H22, H23],
                      [H24, H25, H26, H27, H28, H29, H30, H31, H32, H33, H34, H35],
                      [H36, H37, H38, H39, H40, H41, H42, H43, H44, H45, H46, H47],
                      [H48, H49, H50, H51, H52, H53, H54, H55, H56, H57, H58, H59],
                      [H60, H61, H62, H63, H64, H65, H66, H67, H68, H69, H70, H71],
                      [H72, H73, H74, H75, H76, H77, H78, H79, H80, H81, H82, H83],
                      [H84, H85, H86, H87, H88, H89, H90, H91, H92, H93, H94, H95],
                      [H96, H97, H98, H99, H100, H101, H102, H103, H104, H105, H106, H107],
                      [H108, H109, H110, H111, H112, H113, H114, H115, H116, H117, H118, H119],
                      [H120, H121, H122, H123, H124, H125, H126, H127, H128, H129, H130, H131],
                      [H132, H133, H134, H135, H136, H137, H138, H139, H140, H141, H142, H143]])


@ti.func
def EECN2_E(a0, a1, b0, b1):
    return (a1 - a0).cross(b1 - b0).norm_sqr()


@ti.func
def EECN2_g(a0, a1, b0, b1):
    v01, v02, v03 = a0[0], a0[1], a0[2]
    v11, v12, v13 = a1[0], a1[1], a1[2]
    v21, v22, v23 = b0[0], b0[1], b0[2]
    v31, v32, v33 = b1[0], b1[1], b1[2]
    t8 = -v11 + v01
    t9 = -v12 + v02
    t10 = -v13 + v03
    t11 = -v31 + v21
    t12 = -v32 + v22
    t13 = -v33 + v23
    t23 = t8 * t12 + -(t9 * t11)
    t24 = t8 * t13 + -(t10 * t11)
    t25 = t9 * t13 + -(t10 * t12)
    t26 = t8 * t23 * 2.0
    t27 = t9 * t23 * 2.0
    t28 = t8 * t24 * 2.0
    t29 = t10 * t24 * 2.0
    t30 = t9 * t25 * 2.0
    t31 = t10 * t25 * 2.0
    t32 = t11 * t23 * 2.0
    t33 = t12 * t23 * 2.0
    t23 = t11 * t24 * 2.0
    t10 = t13 * t24 * 2.0
    t9 = t12 * t25 * 2.0
    t8 = t13 * t25 * 2.0
    g0 = t33 + t10
    g1 = -t32 + t8
    g2 = -t23 - t9
    g3 = -t33 - t10
    g4 = t32 - t8
    g5 = t23 + t9
    g6 = -t27 - t29
    g7 = t26 - t31
    g8 = t28 + t30
    g9 = t27 + t29
    g10 = -t26 + t31
    g11 = -t28 - t30
    return ti.Vector([g0, g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11])


@ti.func
def EECN2_H(a0, a1, b0, b1):
    v01, v02, v03 = a0[0], a0[1], a0[2]
    v11, v12, v13 = a1[0], a1[1], a1[2]
    v21, v22, v23 = b0[0], b0[1], b0[2]
    v31, v32, v33 = b1[0], b1[1], b1[2]
    t8 = -v11 + v01
    t9 = -v12 + v02
    t10 = -v13 + v03
    t11 = -v31 + v21
    t12 = -v32 + v22
    t13 = -v33 + v23
    t32 = t8 * t9 * 2.0
    t33 = t8 * t10 * 2.0
    t34 = t9 * t10 * 2.0
    t35 = t8 * t11 * 2.0
    t48 = t8 * t12
    t36 = t48 * 2.0
    t49 = t9 * t11
    t37 = t49 * 2.0
    t38 = t48 * 4.0
    t48 = t8 * t13
    t39 = t48 * 2.0
    t40 = t49 * 4.0
    t41 = t9 * t12 * 2.0
    t49 = t10 * t11
    t42 = t49 * 2.0
    t43 = t48 * 4.0
    t48 = t9 * t13
    t44 = t48 * 2.0
    t45 = t49 * 4.0
    t49 = t10 * t12
    t46 = t49 * 2.0
    t47 = t48 * 4.0
    t48 = t49 * 4.0
    t49 = t10 * t13 * 2.0
    t50 = t11 * t12 * 2.0
    t51 = t11 * t13 * 2.0
    t52 = t12 * t13 * 2.0
    t20 = t8 * t8 * 2.0
    t9 = t9 * t9 * 2.0
    t8 = t10 * t10 * 2.0
    t23 = t11 * t11 * 2.0
    t24 = t12 * t12 * 2.0
    t25 = t13 * t13 * 2.0
    t86 = t35 + t41
    t87 = t35 + t49
    t88 = t41 + t49
    t74 = t20 + t9
    t75 = t20 + t8
    t76 = t9 + t8
    t77 = t23 + t24
    t78 = t23 + t25
    t79 = t24 + t25
    t89 = t40 + -t36
    t90 = t36 + -t40
    t91 = t37 + -t38
    t92 = t38 + -t37
    t93 = t45 + -t39
    t94 = t39 + -t45
    t95 = t42 + -t43
    t37 = t43 + -t42
    t39 = t48 + -t44
    t45 = t44 + -t48
    t38 = t46 + -t47
    t40 = t47 + -t46
    t36 = -t35 + -t41
    t13 = -t35 + -t49
    t11 = -t41 + -t49
    t12 = -t20 + -t9
    t10 = -t20 + -t8
    t8 = -t9 + -t8
    t9 = -t23 + -t24
    t49 = -t23 + -t25
    t48 = -t24 + -t25
    H0 = t79
    H1 = -t50
    H2 = -t51
    H3 = t48
    H4 = t50
    H5 = t51
    H6 = t11
    H7 = t92
    H8 = t37
    H9 = t88
    H10 = t91
    H11 = t95
    H12 = -t50
    H13 = t78
    H14 = -t52
    H15 = t50
    H16 = t49
    H17 = t52
    H18 = t89
    H19 = t13
    H20 = t40
    H21 = t90
    H22 = t87
    H23 = t38
    H24 = -t51
    H25 = -t52
    H26 = t77
    H27 = t51
    H28 = t52
    H29 = t9
    H30 = t93
    H31 = t39
    H32 = t36
    H33 = t94
    H34 = t45
    H35 = t86
    H36 = t48
    H37 = t50
    H38 = t51
    H39 = t79
    H40 = -t50
    H41 = -t51
    H42 = t88
    H43 = t91
    H44 = t95
    H45 = t11
    H46 = t92
    H47 = t37
    H48 = t50
    H49 = t49
    H50 = t52
    H51 = -t50
    H52 = t78
    H53 = -t52
    H54 = t90
    H55 = t87
    H56 = t38
    H57 = t89
    H58 = t13
    H59 = t40
    H60 = t51
    H61 = t52
    H62 = t9
    H63 = -t51
    H64 = -t52
    H65 = t77
    H66 = t94
    H67 = t45
    H68 = t86
    H69 = t93
    H70 = t39
    H71 = t36
    H72 = t11
    H73 = t89
    H74 = t93
    H75 = t88
    H76 = t90
    H77 = t94
    H78 = t76
    H79 = -t32
    H80 = -t33
    H81 = t8
    H82 = t32
    H83 = t33
    H84 = t92
    H85 = t13
    H86 = t39
    H87 = t91
    H88 = t87
    H89 = t45
    H90 = -t32
    H91 = t75
    H92 = -t34
    H93 = t32
    H94 = t10
    H95 = t34
    H96 = t37
    H97 = t40
    H98 = t36
    H99 = t95
    H100 = t38
    H101 = t86
    H102 = -t33
    H103 = -t34
    H104 = t74
    H105 = t33
    H106 = t34
    H107 = t12
    H108 = t88
    H109 = t90
    H110 = t94
    H111 = t11
    H112 = t89
    H113 = t93
    H114 = t8
    H115 = t32
    H116 = t33
    H117 = t76
    H118 = -t32
    H119 = -t33
    H120 = t91
    H121 = t87
    H122 = t45
    H123 = t92
    H124 = t13
    H125 = t39
    H126 = t32
    H127 = t10
    H128 = t34
    H129 = -t32
    H130 = t75
    H131 = -t34
    H132 = t95
    H133 = t38
    H134 = t86
    H135 = t37
    H136 = t40
    H137 = t36
    H138 = t33
    H139 = t34
    H140 = t12
    H141 = -t33
    H142 = -t34
    H143 = t74
    return ti.Matrix([[H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11],
                      [H12, H13, H14, H15, H16, H17, H18, H19, H20, H21, H22, H23],
                      [H24, H25, H26, H27, H28, H29, H30, H31, H32, H33, H34, H35],
                      [H36, H37, H38, H39, H40, H41, H42, H43, H44, H45, H46, H47],
                      [H48, H49, H50, H51, H52, H53, H54, H55, H56, H57, H58, H59],
                      [H60, H61, H62, H63, H64, H65, H66, H67, H68, H69, H70, H71],
                      [H72, H73, H74, H75, H76, H77, H78, H79, H80, H81, H82, H83],
                      [H84, H85, H86, H87, H88, H89, H90, H91, H92, H93, H94, H95],
                      [H96, H97, H98, H99, H100, H101, H102, H103, H104, H105, H106, H107],
                      [H108, H109, H110, H111, H112, H113, H114, H115, H116, H117, H118, H119],
                      [H120, H121, H122, H123, H124, H125, H126, H127, H128, H129, H130, H131],
                      [H132, H133, H134, H135, H136, H137, H138, H139, H140, H141, H142, H143]])


@ti.func
def EEM_E(input, eps_x):
    input_div_eps_x = input / eps_x
    return (-input_div_eps_x + 2.0) * input_div_eps_x


@ti.func
def EEM_g(input, eps_x):
    one_div_eps_x = 1.0 / eps_x
    return 2.0 * one_div_eps_x * (-one_div_eps_x * input + 1.0)


@ti.func
def EEM_H(input, eps_x):
    return -2.0 / (eps_x * eps_x)


@ti.func
def M_E(a0, a1, b0, b1, eps_x):
    EECN2 = EECN2_E(a0, a1, b0, b1)
    E = 1.0
    if EECN2 < eps_x:
        E = EEM_E(EECN2, eps_x)
    return E


@ti.func
def M_g(a0, a1, b0, b1, eps_x):
    EECN2 = EECN2_E(a0, a1, b0, b1)
    g = ti.Vector([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
    if EECN2 < eps_x:
        g = EEM_g(EECN2, eps_x) * EECN2_g(a0, a1, b0, b1)
    return g


@ti.func
def M_H(a0, a1, b0, b1, eps_x):
    EECN2 = EECN2_E(a0, a1, b0, b1)
    Z = ti.Vector([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
    H = ti.Matrix.rows([Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z, Z])
    if EECN2 < eps_x:
        g = EECN2_g(a0, a1, b0, b1)
        H = EEM_g(EECN2, eps_x) * EECN2_H(a0, a1, b0, b1) + EEM_H(EECN2, eps_x) * g.outer_product(g)
    return H


@ti.func
def M_threshold(a0, a1, b0, b1):
    return 1.0e-3 * (a0 - a1).norm_sqr() * (b0 - b1).norm_sqr()


@ti.func
def PT_type(p, t0, t1, t2):
    nVec = (t1 - t0).cross(t2 - t0)
    basis = ti.Matrix.rows([t1 - t0, (t1 - t0).cross(nVec)])
    param0 = (basis @ basis.transpose()).inverse() @ (basis @ (p - t0))
    case = -1
    if 0.0 < param0[0] < 1.0 and 0.0 <= param0[1]:
        case = 3
    else:
        basis = ti.Matrix.rows([t2 - t1, (t2 - t1).cross(nVec)])
        param1 = (basis @ basis.transpose()).inverse() @ (basis @ (p - t1))
        if 0.0 < param1[0] < 1.0 and 0.0 <= param1[1]:
            case = 4
        else:
            basis = ti.Matrix.rows([t0 - t2, (t0 - t2).cross(nVec)])
            param2 = (basis @ basis.transpose()).inverse() @ (basis @ (p - t2))
            if 0.0 < param2[0] < 1.0 and 0.0 < param2[1]:
                case = 5
            else:
                if param0[0] <= 0.0 and param2[0] >= 1.0:
                    case = 0
                elif param1[0] <= 0.0 and param0[0] >= 1.0:
                    case = 1
                elif param2[0] <= 0.0 and param1[0] >= 1.0:
                    case = 2
                else:
                    case = 6
    return case


@ti.func
def EE_type(a0, a1, b0, b1):
    u = a1 - a0
    v = b1 - b0
    w = a0 - b0
    a = u.norm_sqr()
    b = u.dot(v)
    c = v.norm_sqr()
    d = u.dot(w)
    e = v.dot(w)
    D = a * c - b * b
    tD = D
    case = 8
    sN = b * e - c * d
    tN = 0.0
    if sN <= 0.0:
        tN = e
        tD = c
        case = 2
    elif sN >= D:
        tN = e + b
        tD = c
        case = 5
    else:
        tN = a * e - b * d
        if 0.0 < tN < tD and (u.cross(v).dot(w) == 0.0 or u.cross(v).norm_sqr() < 1.0e-20 * a * c):
            if sN < D / 2:
                tN = e
                tD = c
                case = 2
            else:
                tN = e + b
                tD = c
                case = 5
    if tN <= 0.0:
        if -d <= 0.0:
            case = 0
        elif -d >= a:
            case = 3
        else:
            case = 6
    elif tN >= tD:
        if -d + b <= 0.0:
            case = 1
        elif -d + b >= a:
            case = 4
        else:
            case = 7
    return case


@ti.func
def PE_type(p, e0, e1):
    e = e1 - e0
    ratio = e.dot(p - e0) / e.norm_sqr()
    case = 0
    if ratio < 0:
        case = 0
    elif ratio > 1:
        case = 1
    else:
        case = 2
    return case


@ti.func
def PT_dist2(p, t0, t1, t2, case):
    dist2 = 0.0
    if case == 0:
        dist2 = PP_3D_E(p, t0)
    elif case == 1:
        dist2 = PP_3D_E(p, t1)
    elif case == 2:
        dist2 = PP_3D_E(p, t2)
    elif case == 3:
        dist2 = PE_3D_E(p, t0, t1)
    elif case == 4:
        dist2 = PE_3D_E(p, t1, t2)
    elif case == 5:
        dist2 = PE_3D_E(p, t2, t0)
    elif case == 6:
        dist2 = PT_3D_E(p, t0, t1, t2)
    return dist2


@ti.func
def EE_dist2(a0, a1, b0, b1, case):
    dist2 = 0.0
    if case == 0:
        dist2 = PP_3D_E(a0, b0)
    elif case == 1:
        dist2 = PP_3D_E(a0, b1)
    elif case == 2:
        dist2 = PE_3D_E(a0, b0, b1)
    elif case == 3:
        dist2 = PP_3D_E(a1, b0)
    elif case == 4:
        dist2 = PP_3D_E(a1, b1)
    elif case == 5:
        dist2 = PE_3D_E(a1, b0, b1)
    elif case == 6:
        dist2 = PE_3D_E(b0, a0, a1)
    elif case == 7:
        dist2 = PE_3D_E(b1, a0, a1)
    elif case == 8:
        dist2 = EE_3D_E(a0, a1, b0, b1)
    return dist2
